/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* oddEvenList(ListNode* head) {
        if(head == NULL or head->next == NULL)
            return head;
        ListNode* ptr = head,*ptr1 = head->next,*head1=ptr1,*prev = NULL;
        int i = 0;
        while(ptr && ptr->next){
            ptr1 = ptr->next;
            ptr->next = ptr1->next;
            prev = ptr;
            ptr = ptr1;
            i++;
        }
         if(i&1)
             prev->next = head1;
         else
            ptr->next = head1;
        return head;
    }
};
