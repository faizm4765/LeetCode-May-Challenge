/*  Given two strings s1 and s2, write a function to return true if s2 contains the permutation of s1. 
In other words, one of the first string's permutations is the substring of the second string.
 
Example 1:

Input: s1 = "ab" s2 = "eidbaooo"
Output: True
Explanation: s2 contains one permutation of s1 ("ba").
*/


-------------------------------------------------------------------------------------------------------------------

class Solution {
public:
    bool checkInclusion(string s1, string s2) {
        
        int m = s1.length();
        int n = s2.length();
        
        if(s1.empty() or m>n)
            return 0;
        
        vector<int>hash(26,0),hash1(26,0);
        
        int i = 0;
        
        for(i=0;i<m;i++){
            hash1[s1[i]-97] += 1;
            hash[s2[i]-97] += 1;
        }
        if(hash == hash1)
            return 1;
        
        for(i=1;i+m-1<n;i++){
            hash[s2[i-1]-97] -= 1;
            hash[s2[i+m-1]-97] += 1;
            if(hash == hash1)
                return 1;
        }
        return 0;
    }
};
